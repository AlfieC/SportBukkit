From 21d2a7014b9ddcb0ba816145291e7a88bedd8309 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 17 Feb 2015 08:28:39 -0500
Subject: [PATCH] Fix TNT physics


diff --git a/src/main/java/net/minecraft/server/BlockTNT.java b/src/main/java/net/minecraft/server/BlockTNT.java
index a44f44a..b65f65f 100644
--- a/src/main/java/net/minecraft/server/BlockTNT.java
+++ b/src/main/java/net/minecraft/server/BlockTNT.java
@@ -30,7 +30,7 @@ public class BlockTNT extends Block {
 
     public void wasExploded(World world, BlockPosition blockposition, Explosion explosion) {
         if (!world.isStatic) {
-            EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) ((float) blockposition.getX() + 0.5F), (double) ((float) blockposition.getY() + 0.5F), (double) ((float) blockposition.getZ() + 0.5F), explosion.c());
+            EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) ((float) blockposition.getX() + 0.5F), blockposition.getY(), (double) ((float) blockposition.getZ() + 0.5F), explosion.c()); // SportBukkit - correct Y coordinate
 
             // CraftBukkit start - allow exploded TNT to cancel priming
             org.bukkit.event.entity.ExplosionPrimeEvent event = new org.bukkit.event.entity.ExplosionPrimeEvent((org.bukkit.entity.Explosive) entitytntprimed.getBukkitEntity());
@@ -54,7 +54,7 @@ public class BlockTNT extends Block {
         removeBlock = true; // CraftBukkit - TNT priming may be cancelled
         if (!world.isStatic) {
             if (((Boolean) iblockdata.get(BlockTNT.EXPLODE)).booleanValue()) {
-                EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) ((float) blockposition.getX() + 0.5F), (double) ((float) blockposition.getY() + 0.5F), (double) ((float) blockposition.getZ() + 0.5F), entityliving);
+                EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) ((float) blockposition.getX() + 0.5F), (double) blockposition.getY(), (double) ((float) blockposition.getZ() + 0.5F), entityliving); // SportBukkit - correct Y coordinate
 
                 // CraftBukkit start - fire ExplosionPrimeEvent
                 org.bukkit.event.entity.ExplosionPrimeEvent event = new org.bukkit.event.entity.ExplosionPrimeEvent((org.bukkit.entity.Explosive) entitytntprimed.getBukkitEntity());
diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorTNT.java b/src/main/java/net/minecraft/server/DispenseBehaviorTNT.java
index 26b8b03..ca333e2 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorTNT.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorTNT.java
@@ -18,7 +18,7 @@ final class DispenseBehaviorTNT extends DispenseBehaviorItem {
         ItemStack itemstack1 = itemstack.a(1);
         org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
-        EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, blockposition.getX() + 0.5, blockposition.getY() + 0.5, blockposition.getZ() + 0.5, (EntityLiving) null);
+        EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, blockposition.getX() + 0.5, blockposition.getY(), blockposition.getZ() + 0.5, (EntityLiving) null); // SportBukkit - correct Y coordinate
 
 
         BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), new org.bukkit.util.Vector(blockposition.getX() + 0.5, blockposition.getY() + 0.5, blockposition.getZ() + 0.5), entitytntprimed.getBukkitEntity());
diff --git a/src/main/java/net/minecraft/server/EntityTNTPrimed.java b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
index 283d1da..fb93501 100644
--- a/src/main/java/net/minecraft/server/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
@@ -70,6 +70,43 @@ public class EntityTNTPrimed extends Entity {
 
     }
 
+    // SportBukkit start - Prevent TNT from being pushed in water by overriding the method that applies the motion
+    @Override
+    public boolean W() {
+        if(this.world.getServer().getWaterPushesTNT()) return super.W();
+
+        // Preserve velocity while calling the super method
+        double oldMotX = this.motX;
+        double oldMotY = this.motY;
+        double oldMotZ = this.motZ;
+
+        super.W();
+
+        this.motX = oldMotX;
+        this.motY = oldMotY;
+        this.motZ = oldMotZ;
+
+        if(this.inWater) {
+            // Send position and velocity updates to nearby players on every tick while the TNT is in water.
+            // This does pretty well at keeping their clients in sync with the server.
+            EntityTrackerEntry ete = (EntityTrackerEntry) ((WorldServer) this.getWorld()).getTracker().trackedEntities.get(this.getId());
+            if(ete != null) {
+                PacketPlayOutEntityVelocity velocityPacket = new PacketPlayOutEntityVelocity(this);
+                PacketPlayOutEntityTeleport positionPacket = new PacketPlayOutEntityTeleport(this);
+
+                for(EntityPlayer viewer : (java.util.Set<EntityPlayer>) ete.trackedPlayers) {
+                    if((viewer.locX - this.locX) * (viewer.locY - this.locY) * (viewer.locZ - this.locZ) < 16 * 16) {
+                        viewer.playerConnection.sendPacket(velocityPacket);
+                        viewer.playerConnection.sendPacket(positionPacket);
+                    }
+                }
+            }
+        }
+
+        return this.inWater;
+    }
+    // SportBukkit end
+
     private void explode() {
         // CraftBukkit start
         // float f = 4.0F;
@@ -94,6 +131,6 @@ public class EntityTNTPrimed extends Entity {
     }
 
     public float getHeadHeight() {
-        return 0.0F;
+        return this.length / 2; // SportBukkit
     }
 }
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index afe25e3..279af54 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -138,9 +138,14 @@ public class Explosion {
 
                         double d14 = EnchantmentProtection.a(entity, d13);
 
+                        /*
                         entity.motX += d8 * d14;
                         entity.motY += d9 * d14;
                         entity.motZ += d10 * d14;
+                        */
+                        // This impulse method sets the dirty flag, so clients will get an immediate velocity update
+                        entity.g(d8 * d14, d9 * d14, d10 * d14);
+
                         if (entity instanceof EntityHuman) {
                             this.k.put((EntityHuman) entity, new Vec3D(d8 * d13, d9 * d13, d10 * d13));
                         }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index dc7f1b4..c90a0a8 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -593,6 +593,11 @@ public final class CraftServer implements Server {
     }
 
     @Override
+    public boolean getWaterPushesTNT() {
+        return this.configuration.getBoolean("settings.water-pushes-tnt", true);
+    }
+
+    @Override
     public int getTicksPerAnimalSpawns() {
         return this.configuration.getInt("ticks-per.animal-spawns");
     }
-- 
1.9.0

