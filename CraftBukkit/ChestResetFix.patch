From 11a962a76048777e2e070ad9a9178a794ea1fdca Mon Sep 17 00:00:00 2001
From: mrapple <tony@oc.tc>
Date: Sun, 28 Oct 2012 18:45:54 -0500
Subject: [PATCH] e

---
 src/main/java/net/minecraft/server/BlockChest.java |  295 ++++++++++++++++++++
 1 files changed, 295 insertions(+), 0 deletions(-)
 create mode 100644 src/main/java/net/minecraft/server/BlockChest.java

diff --git a/src/main/java/net/minecraft/server/BlockChest.java b/src/main/java/net/minecraft/server/BlockChest.java
new file mode 100644
index 0000000..1f58349
--- /dev/null
+++ b/src/main/java/net/minecraft/server/BlockChest.java
@@ -0,0 +1,295 @@
+package net.minecraft.server;
+
+import java.util.Iterator;
+import java.util.Random;
+
+public class BlockChest extends BlockContainer {
+
+    private Random a = new Random();
+
+    protected BlockChest(int var1) {
+        super(var1, Material.WOOD);
+        this.textureId = 26;
+        this.a(CreativeModeTab.c);
+    }
+
+    public boolean c() {
+        return false;
+    }
+
+    public boolean b() {
+        return false;
+    }
+
+    public int d() {
+        return 22;
+    }
+
+    public void onPlace(World var1, int var2, int var3, int var4) {
+        super.onPlace(var1, var2, var3, var4);
+        this.d_(var1, var2, var3, var4);
+        int var5 = var1.getTypeId(var2, var3, var4 - 1);
+        int var6 = var1.getTypeId(var2, var3, var4 + 1);
+        int var7 = var1.getTypeId(var2 - 1, var3, var4);
+        int var8 = var1.getTypeId(var2 + 1, var3, var4);
+        if (var5 == this.id) {
+            this.d_(var1, var2, var3, var4 - 1);
+        }
+        if (var6 == this.id) {
+            this.d_(var1, var2, var3, var4 + 1);
+        }
+        if (var7 == this.id) {
+            this.d_(var1, var2 - 1, var3, var4);
+        }
+        if (var8 == this.id) {
+            this.d_(var1, var2 + 1, var3, var4);
+        }
+    }
+
+    public void postPlace(World var1, int var2, int var3, int var4, EntityLiving var5) {
+        int var6 = var1.getTypeId(var2, var3, var4 - 1);
+        int var7 = var1.getTypeId(var2, var3, var4 + 1);
+        int var8 = var1.getTypeId(var2 - 1, var3, var4);
+        int var9 = var1.getTypeId(var2 + 1, var3, var4);
+        byte var10 = 0;
+        int var11 = MathHelper.floor((double)(var5.yaw * 4.0F / 360.0F) + 0.5D) & 3;
+        if (var11 == 0) {
+            var10 = 2;
+        }
+        if (var11 == 1) {
+            var10 = 5;
+        }
+        if (var11 == 2) {
+            var10 = 3;
+        }
+        if (var11 == 3) {
+            var10 = 4;
+        }
+        if (var6 != this.id && var7 != this.id && var8 != this.id && var9 != this.id) {
+            var1.setData(var2, var3, var4, var10);
+        }
+        else {
+            if ((var6 == this.id || var7 == this.id) && (var10 == 4 || var10 == 5)) {
+                if (var6 == this.id) {
+                    var1.setData(var2, var3, var4 - 1, var10);
+                }
+                else {
+                    var1.setData(var2, var3, var4 + 1, var10);
+                }
+                var1.setData(var2, var3, var4, var10);
+            }
+            if ((var8 == this.id || var9 == this.id) && (var10 == 2 || var10 == 3)) {
+                if (var8 == this.id) {
+                    var1.setData(var2 - 1, var3, var4, var10);
+                }
+                else {
+                    var1.setData(var2 + 1, var3, var4, var10);
+                }
+                var1.setData(var2, var3, var4, var10);
+            }
+        }
+    }
+
+    public void d_(World var1, int var2, int var3, int var4) {
+        if (!var1.isStatic) {
+            int var5 = var1.getTypeId(var2, var3, var4 - 1);
+            int var6 = var1.getTypeId(var2, var3, var4 + 1);
+            int var7 = var1.getTypeId(var2 - 1, var3, var4);
+            int var8 = var1.getTypeId(var2 + 1, var3, var4);
+            boolean var9 = true;
+            int var10;
+            int var11;
+            boolean var12;
+            byte var13;
+            int var14;
+            if (var5 != this.id && var6 != this.id) {
+                if (var7 != this.id && var8 != this.id) {
+                    var13 = 3;
+                    if (Block.q[var5] && !Block.q[var6]) {
+                        var13 = 3;
+                    }
+                    if (Block.q[var6] && !Block.q[var5]) {
+                        var13 = 2;
+                    }
+                    if (Block.q[var7] && !Block.q[var8]) {
+                        var13 = 5;
+                    }
+                    if (Block.q[var8] && !Block.q[var7]) {
+                        var13 = 4;
+                    }
+                }
+                else {
+                    var10 = var1.getTypeId(var7 == this.id ? var2 - 1 : var2 + 1, var3, var4 - 1);
+                    var11 = var1.getTypeId(var7 == this.id ? var2 - 1 : var2 + 1, var3, var4 + 1);
+                    var13 = 3;
+                    var12 = true;
+                    if (var7 == this.id) {
+                        var14 = var1.getData(var2 - 1, var3, var4);
+                    }
+                    else {
+                        var14 = var1.getData(var2 + 1, var3, var4);
+                    }
+                    if (var14 == 2) {
+                        var13 = 2;
+                    }
+                    if ((Block.q[var5] || Block.q[var10]) && !Block.q[var6] && !Block.q[var11]) {
+                        var13 = 3;
+                    }
+                    if ((Block.q[var6] || Block.q[var11]) && !Block.q[var5] && !Block.q[var10]) {
+                        var13 = 2;
+                    }
+                }
+            }
+            else {
+                var10 = var1.getTypeId(var2 - 1, var3, var5 == this.id ? var4 - 1 : var4 + 1);
+                var11 = var1.getTypeId(var2 + 1, var3, var5 == this.id ? var4 - 1 : var4 + 1);
+                var13 = 5;
+                var12 = true;
+                if (var5 == this.id) {
+                    var14 = var1.getData(var2, var3, var4 - 1);
+                }
+                else {
+                    var14 = var1.getData(var2, var3, var4 + 1);
+                }
+                if (var14 == 4) {
+                    var13 = 4;
+                }
+                if ((Block.q[var7] || Block.q[var10]) && !Block.q[var8] && !Block.q[var11]) {
+                    var13 = 5;
+                }
+                if ((Block.q[var8] || Block.q[var11]) && !Block.q[var7] && !Block.q[var10]) {
+                    var13 = 4;
+                }
+            }
+            var1.setData(var2, var3, var4, var13);
+        }
+    }
+
+    public int a(int var1) {
+        return 4;
+    }
+
+    public boolean canPlace(World var1, int var2, int var3, int var4) {
+        int var5 = 0;
+        if (var1.getTypeId(var2 - 1, var3, var4) == this.id) {
+            ++var5;
+        }
+        if (var1.getTypeId(var2 + 1, var3, var4) == this.id) {
+            ++var5;
+        }
+        if (var1.getTypeId(var2, var3, var4 - 1) == this.id) {
+            ++var5;
+        }
+        if (var1.getTypeId(var2, var3, var4 + 1) == this.id) {
+            ++var5;
+        }
+        return var5 > 1 ? false : (this.l(var1, var2 - 1, var3, var4) ? false : (this.l(var1, var2 + 1, var3, var4) ? false : (this.l(var1, var2, var3, var4 - 1) ? false : !this.l(var1, var2, var3, var4 + 1))));
+    }
+
+    private boolean l(World var1, int var2, int var3, int var4) {
+        return var1.getTypeId(var2, var3, var4) != this.id ? false : (var1.getTypeId(var2 - 1, var3, var4) == this.id ? true : (var1.getTypeId(var2 + 1, var3, var4) == this.id ? true : (var1.getTypeId(var2, var3, var4 - 1) == this.id ? true : var1.getTypeId(var2, var3, var4 + 1) == this.id)));
+    }
+
+    public void doPhysics(World var1, int var2, int var3, int var4, int var5) {
+        super.doPhysics(var1, var2, var3, var4, var5);
+        TileEntityChest var6 = (TileEntityChest)var1.getTileEntity(var2, var3, var4);
+        if (var6 != null) {
+            var6.h();
+        }
+    }
+
+    public void remove(World var1, int var2, int var3, int var4, int var5, int var6) {
+        TileEntityChest var7 = (TileEntityChest)var1.getTileEntity(var2, var3, var4);
+        if (var7 != null) {
+            for (int var8 = 0; var8 < var7.getSize(); ++var8) {
+                ItemStack var9 = var7.getItem(var8);
+                if (var9 != null) {
+                    float var10 = this.a.nextFloat() * 0.8F + 0.1F;
+                    float var11 = this.a.nextFloat() * 0.8F + 0.1F;
+                    EntityItem var14;
+                    for (float var12 = this.a.nextFloat() * 0.8F + 0.1F; var9.count > 0; var1.addEntity(var14)) {
+                        int var13 = this.a.nextInt(21) + 10;
+                        if (var13 > var9.count) {
+                            var13 = var9.count;
+                        }
+                        var9.count -= var13;
+                        var14 = new EntityItem(var1, (double)((float)var2 + var10), (double)((float)var3 + var11), (double)((float)var4 + var12), new ItemStack(var9.id, var13, var9.getData()));
+                        float var15 = 0.05F;
+                        var14.motX = (double)((float)this.a.nextGaussian() * var15);
+                        var14.motY = (double)((float)this.a.nextGaussian() * var15 + 0.2F);
+                        var14.motZ = (double)((float)this.a.nextGaussian() * var15);
+                        if (var9.hasTag()) {
+                            var14.itemStack.setTag((NBTTagCompound)var9.getTag().clone());
+                        }
+                    }
+                }
+            }
+        }
+        super.remove(var1, var2, var3, var4, var5, var6);
+    }
+
+    public boolean interact(World var1, int var2, int var3, int var4, EntityHuman var5, int var6, float var7, float var8, float var9) {
+        Object var10 = (TileEntityChest)var1.getTileEntity(var2, var3, var4);
+        if (var10 == null) {
+            return true;
+        }
+        else if (var1.s(var2, var3 + 1, var4)) {
+            return true;
+        }
+        else if (n(var1, var2, var3, var4)) {
+            return true;
+        }
+        else if (var1.getTypeId(var2 - 1, var3, var4) == this.id && (var1.s(var2 - 1, var3 + 1, var4) || n(var1, var2 - 1, var3, var4))) {
+            return true;
+        }
+        else if (var1.getTypeId(var2 + 1, var3, var4) == this.id && (var1.s(var2 + 1, var3 + 1, var4) || n(var1, var2 + 1, var3, var4))) {
+            return true;
+        }
+        else if (var1.getTypeId(var2, var3, var4 - 1) == this.id && (var1.s(var2, var3 + 1, var4 - 1) || n(var1, var2, var3, var4 - 1))) {
+            return true;
+        }
+        else if (var1.getTypeId(var2, var3, var4 + 1) == this.id && (var1.s(var2, var3 + 1, var4 + 1) || n(var1, var2, var3, var4 + 1))) {
+            return true;
+        }
+        else {
+            if (var1.getTypeId(var2 - 1, var3, var4) == this.id) {
+                var10 = new InventoryLargeChest("container.chestDouble", (TileEntityChest)var1.getTileEntity(var2 - 1, var3, var4), (IInventory)var10);
+            }
+            if (var1.getTypeId(var2 + 1, var3, var4) == this.id) {
+                var10 = new InventoryLargeChest("container.chestDouble", (IInventory)var10, (TileEntityChest)var1.getTileEntity(var2 + 1, var3, var4));
+            }
+            if (var1.getTypeId(var2, var3, var4 - 1) == this.id) {
+                var10 = new InventoryLargeChest("container.chestDouble", (TileEntityChest)var1.getTileEntity(var2, var3, var4 - 1), (IInventory)var10);
+            }
+            if (var1.getTypeId(var2, var3, var4 + 1) == this.id) {
+                var10 = new InventoryLargeChest("container.chestDouble", (IInventory)var10, (TileEntityChest)var1.getTileEntity(var2, var3, var4 + 1));
+            }
+            if (var1.isStatic) {
+                return true;
+            }
+            else {
+                var5.activeContainer = var5.defaultContainer; // CraftBukkit - reset container before opening new chest
+                var5.openContainer((IInventory)var10);
+                return true;
+            }
+        }
+    }
+
+    public TileEntity a(World var1) {
+        return new TileEntityChest();
+    }
+
+    private static boolean n(World var0, int var1, int var2, int var3) {
+        Iterator var4 = var0.a(EntityOcelot.class, AxisAlignedBB.a().a((double)var1, (double)(var2 + 1), (double)var3, (double)(var1 + 1), (double)(var2 + 2), (double)(var3 + 1))).iterator();
+        EntityOcelot var6;
+        do {
+            if (!var4.hasNext()) {
+                return false;
+            }
+            EntityOcelot var5 = (EntityOcelot)var4.next();
+            var6 = (EntityOcelot)var5;
+        }
+        while (!var6.isSitting());
+        return true;
+    }
+}
\ No newline at end of file
-- 
1.7.4.4

