From 77580d6372c581a5bef20f599a2dbe1c9dfad550 Mon Sep 17 00:00:00 2001
From: mrapple <tony@oc.tc>
Date: Thu, 4 Apr 2013 19:13:17 -0500
Subject: [PATCH] Use a server wide main scoreboard

---
 .../java/net/minecraft/server/MinecraftServer.java |    2 ++
 .../net/minecraft/server/SecondaryWorldServer.java |    2 +-
 src/main/java/net/minecraft/server/World.java      |    4 ++--
 .../java/net/minecraft/server/WorldServer.java     |    8 +++++---
 4 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 64d5882..c7ff751 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -82,6 +82,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
     public final Thread primaryThread;
     public java.util.Queue<Runnable> processQueue = new java.util.concurrent.ConcurrentLinkedQueue<Runnable>();
     public int autosavePeriod;
+    public Scoreboard scoreboard;
     // CraftBukkit end
 
     public MinecraftServer(OptionSet options) { // CraftBukkit - signature file -> OptionSet
@@ -92,6 +93,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
         this.am();
 
         // CraftBukkit start
+        this.scoreboard = new ScoreboardServer(this);
         this.options = options;
         try {
             this.reader = new ConsoleReader(System.in, System.out);
diff --git a/src/main/java/net/minecraft/server/SecondaryWorldServer.java b/src/main/java/net/minecraft/server/SecondaryWorldServer.java
index 94a2f05..5e3ea76 100644
--- a/src/main/java/net/minecraft/server/SecondaryWorldServer.java
+++ b/src/main/java/net/minecraft/server/SecondaryWorldServer.java
@@ -6,7 +6,7 @@ public class SecondaryWorldServer extends WorldServer {
         super(minecraftserver, idatamanager, s, i, worldsettings, methodprofiler, iconsolelogmanager, env, gen);
         // CraftBukkit end
         this.worldMaps = worldserver.worldMaps;
-        this.scoreboard = worldserver.getScoreboard();
+        // this.scoreboard = worldserver.getScoreboard(); // CraftBukkit
         // this.worldData = new SecondaryWorldData(worldserver.getWorldData()); // CraftBukkit - use unique worlddata
     }
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 3445cfe..366324d 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -60,7 +60,7 @@ public abstract class World implements IBlockAccess {
     public final MethodProfiler methodProfiler;
     private final Vec3DPool J = new Vec3DPool(300, 2000);
     private final Calendar K = Calendar.getInstance();
-    protected Scoreboard scoreboard = new Scoreboard();
+    // protected Scoreboard scoreboard = new Scoreboard(); // CraftBukkit
     private final IConsoleLogManager logAgent;
     private UnsafeList M = new UnsafeList(); // CraftBukkit - ArrayList -> UnsafeList
     private boolean N;
@@ -2815,7 +2815,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public Scoreboard getScoreboard() {
-        return this.scoreboard;
+        return MinecraftServer.getServer().scoreboard;
     }
 
     public void m(int i, int j, int k, int l) {
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 13f67da..f1ac111 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -62,7 +62,7 @@ public class WorldServer extends World implements org.bukkit.BlockChangeDelegate
         }
 
         this.P = new org.bukkit.craftbukkit.CraftTravelAgent(this); // CraftBukkit
-        this.scoreboard = new ScoreboardServer(minecraftserver);
+        // this.scoreboard = new ScoreboardServer(minecraftserver); // CraftBukkit
         ScoreboardSaveData scoreboardsavedata = (ScoreboardSaveData) this.worldMaps.get(ScoreboardSaveData.class, "scoreboard");
 
         if (scoreboardsavedata == null) {
@@ -70,8 +70,10 @@ public class WorldServer extends World implements org.bukkit.BlockChangeDelegate
             this.worldMaps.a("scoreboard", scoreboardsavedata);
         }
 
-        scoreboardsavedata.a(this.scoreboard);
-        ((ScoreboardServer) this.scoreboard).a(scoreboardsavedata);
+        // CraftBukkit start - use getScoreboard
+        scoreboardsavedata.a(this.getScoreboard());
+        ((ScoreboardServer) this.getScoreboard()).a(scoreboardsavedata);
+        // CraftBukkit end
     }
 
     // CraftBukkit start
-- 
1.7.9.6 (Apple Git-31.1)

